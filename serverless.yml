# "org" ensures this Service is used with the correct Serverless Framework Access Key.
org: yurahuchok
# "app" enables Serverless Framework Dashboard features and sharing them with other Services.
app: task-processor
# "service" is the name of this project. This will also be added to your AWS resource names.
service: task-processor

constructs:
  q-tasks:
    type: queue
    worker: consume
    batchSize: 5 # Maximum number of messages that can be processed in a single "receive" call.
    maxConcurrency: 10 # Maximum number of "consumer" lambdas that can be running at the same time.
    maxRetries: 3 # Maximum number of "receives". Value of 3 means 1 original receive + 2 retries.
  table-processed-tasks:
    type: database/dynamodb-single-table

plugins:
  - serverless-offline
  - serverless-lift

provider:
  name: aws
  runtime: nodejs20.x
  region: eu-central-1
  environment:
    TABLE_NAME: ${construct:table-processed-tasks.tableName}
    QUEUE_URL: ${construct:q-tasks.queueUrl}

functions:
  health:
    handler: src/handler/health.handler
    events:
      - httpApi:
          path: /health
          method: get
  publish:
    handler: src/handler/publish.handler
    events:
      - httpApi:
          path: /publish
          method: post
  consume:
    handler: src/handler/consume.handler
    timeout: 10 # Timeout for the "consumer" lambda. Also used as default visibility timeout for the queue * 6.
